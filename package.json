{
  "name": "cvs-tsk-cert-gen",
  "version": "0.0.1",
  "description": "Certificate generation initiation task",
  "main": "handler.js",
  "scripts": {
    "start": "BRANCH=local BUCKET=local node_modules/serverless/bin/serverless invoke local -f main --path tests/resources/s3-event.json",
    "start:docker": "docker-compose -f docker-compose.yml up -d",
    "build": "node_modules/typescript/bin/tsc --rootDir ./ --outDir .build --sourceMap false && npm run build:copy",
    "build:dev": "node_modules/typescript/bin/tsc && npm run build:copy",
    "build:copy": "find src -type f \\( -name \"*.yml\" -or -name \"*.json\" \\) | cpio -pdm .build && find tests -type f \\( -name \"*.yml\" -or -name \"*.json\" -or -name \"*.base64\" \\)  | cpio -pdm .build",
    "build:docker": "docker-compose -f docker-compose.yml up -d --build",
    "security-checks": "git secrets --scan && git log -p | scanrepo",
    "test": "AWS_XRAY_CONTEXT_MISSING=LOG_ERROR SECRET_NAME=cvs-tsk-cert-gov-notify/api-key BRANCH=local BUCKET=local jest --testMatch=\"**/*.unitTest.ts\" --coverage",
    "test-i": "BRANCH=local jest --testMatch=\"**/*.intTest.ts\" --runInBand --passWithNoTests",
    "tslint": "tslint --project tsconfig.json -q",
    "prepush": "npm test && npm run tslint && npm run security-checks",
    "sonar-scanner": "npm run tslint && npm run coverage && sonar-scanner",
    "coverage": "BRANCH=local BUCKET=local SLS_DEBUG=* jest --testMatch=\"**/*.*Test.ts\" --runInBand --coverage",
    "audit-dep": "npm audit",
    "package": "mkdir -p ${ZIP_NAME} && cp package.json package-lock.json ${ZIP_NAME}/ && cp -r .build/src/* ${ZIP_NAME}/ && cd ${ZIP_NAME} && npm ci --production && rm package.json package-lock.json && zip -qr ../${ZIP_NAME}.zip ."
  },
  "author": "",
  "license": "ISC",
  "dependencies": {
    "aws-sdk": "^2.589.0",
    "aws-xray-sdk": "^2.5.0",
    "js-yaml": "^3.13.1",
    "node-yaml": "^3.2.0",
    "notifications-node-client": "^4.7.0",
    "reflect-metadata": "^0.1.13"
  },
  "devDependencies": {
    "@types/aws-lambda": "^8.10.39",
    "@types/jest": "^24.0.23",
    "@types/jest-plugin-context": "^2.9.2",
    "@types/js-yaml": "^3.12.1",
    "@types/lambda-tester": "^3.6.0",
    "@types/node": "^10.17.9",
    "@types/sinon": "^7.5.1",
    "@types/sinon-chai": "^3.2.3",
    "acorn": "^7.1.0",
    "aws-lambda-mock-context": "^3.2.1",
    "aws-sdk-mock": "^4.5.0",
    "chai": "^4.2.0",
    "eslint": "^5.16.0",
    "husky": "^3.1.0",
    "jest": "^24.9.0",
    "jest-plugin-context": "^2.9.0",
    "jest-sonar-reporter": "^2.0.0",
    "lambda-tester": "^4.0.1",
    "serverless": "^1.59.3",
    "serverless-plugin-tracing": "^2.0.0",
    "serverless-plugin-typescript": "^1.1.9",
    "sinon": "^7.5.0",
    "sinon-chai": "^3.3.0",
    "ts-jest": "^24.2.0",
    "ts-node-register": "^1.0.0",
    "tslint": "^5.20.1",
    "typescript": "^3.7.3"
  },
  "jestSonar": {
    "reportPath": ".reports",
    "reportFile": "test-report.xml",
    "indent": 4
  },
  "jest": {
    "coverageDirectory": "./coverage",
    "collectCoverage": true,
    "testResultsProcessor": "jest-sonar-reporter",
    "testURL": "http://localhost"
  },
  "husky": {
    "hooks": {
      "pre-commit": "npm run prepush && npm run security-checks",
      "pre-push": "npm run prepush"
    }
  }
}
